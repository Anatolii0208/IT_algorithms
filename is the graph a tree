#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int m[1000][1000];
int used[1000]{};
vector <int> stek;
int is = 0;
bool dfs1(int s,int n) {
    used[s] = 1;
    for (int i = 0; i < n; i++) {
        if (used[i] == 0 && m[s][i] == 1 ){
          
            
            dfs1(i,n);
            
            for (int j = 0; j < n; j++)
              if (used[j] == 1 && i != j && m[s][j] == 1)
                return true;
                used[i] = 2;
            
        }
        
    }
    return false;
}
void dfs(int s,int n) {
    used[s] = 1;
    //cout << s << " ";
    for (int i = 0; i < n; i++) {
        if (used[i] == 0 && m[s][i] == 1){
            dfs(i,n);
        }
    }
}
int main(){
  int cnt = 0;
  int n;
  cin >> n;
  for (int i = 0; i < n; i++)
      for (int j = 0; j < n; j++)
          cin >> m[i][j];

  for (int i = 0; i < n; i++) {
      if (used[i] == 0) {
          dfs(i,n);
          cnt++;
      }
  }
  
  if (cnt > 1){
    cout << "NO";
    return 0;
  }

  for (int i = 0; i < n; i++)
    used[i] = 0;

  
  if (dfs1(0,n)){
    cout << "NO";
    return 0;
  }
  cout << "YES";
  return 0;
}
/*6
0 1 1 0 0 0 
1 0 1 0 0 0 
1 1 0 0 0 0
0 0 0 0 1 0
0 0 0 1 0 0
0 0 0 0 0 0*/
